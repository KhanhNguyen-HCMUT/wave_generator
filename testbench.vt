`timescale 1ns/1ps

module wave_gen_tb;
    reg [7:0] duty_cycle;
    reg [7:0] wave_amp;
    reg [7:0] noise_amp;
    reg clk;
    reg rst;
    reg [7:0] freq;
    reg [2:0] wave_sel;
    reg inj_sel;
    wire [15:0] noise_out;
    wire [15:0] wave_out;

    // Instantiate the DUT
    wave_gen uut (
        .clk(clk),
        .rst(rst),
        .freq(freq),
	.wave_amp(wave_amp),
	.noise_amp(noise_amp),
	.duty_cycle(duty_cycle),
        .wave_sel(wave_sel),
        .inj_sel(inj_sel),
	.noise_out(noise_out),
        .wave_out(wave_out)
    );

    // Generate 4 ns clock period
    always #2 clk = ~clk;

    initial begin
        
	//Case 1:
        clk = 0;
        rst = 1;
        freq = 8'd1;
        inj_sel = 1'b0;
	wave_amp = 1;
	noise_amp = 1;
	duty_cycle = 128;
        wave_sel = 3'b100;
        // Hold reset for a short period
        #15 rst = 0;
        // Simulation time division into 4 parts
        #5000 wave_sel = 3'b000; // 1/4 time
	#5000 wave_sel = 3'b001; // 1/4 time
        #5000 wave_sel = 3'b010; // 2/4 time
        #5000 wave_sel = 3'b011; // 3/4 time
        #5000;

	//Case 2:
        clk = 0;
        rst = 1;
        freq = 8'd1;
        inj_sel = 1'b0;
	wave_amp = 5;
	noise_amp = 1;
	duty_cycle = 128;
        wave_sel = 3'b100;
        // Hold reset for a short period
        #15 rst = 0;
        // Simulation time division into 4 parts
        #5000 wave_sel = 3'b000; // 1/4 time
	#5000 wave_sel = 3'b001; // 1/4 time
        #5000 wave_sel = 3'b010; // 2/4 time
        #5000 wave_sel = 3'b011; // 3/4 time
        #5000;

	//Case 3:
        clk = 0;
        rst = 1;
        freq = 8'd5;
        inj_sel = 1'b0;
	wave_amp = 5;
	noise_amp = 1;
	duty_cycle = 128;
        wave_sel = 3'b100;
        // Hold reset for a short period
        #15 rst = 0;
        // Simulation time division into 4 parts
        #15000 wave_sel = 3'b000; // 1/4 time
	#15000 wave_sel = 3'b001; // 1/4 time
        #15000 wave_sel = 3'b010; // 2/4 time
        #15000 wave_sel = 3'b011; // 3/4 time
        #15000;

	//Case 4:
        clk = 0;
        rst = 1;
        freq = 8'd5;
        inj_sel = 1'b1;
	wave_amp = 5;
	noise_amp = 1;
	duty_cycle = 128;
        wave_sel = 3'b100;
        // Hold reset for a short period
        #15 rst = 0;
        // Simulation time division into 4 parts
        #15000 wave_sel = 3'b000; // 1/4 time
	#15000 wave_sel = 3'b001; // 1/4 time
        #15000 wave_sel = 3'b010; // 2/4 time
        #15000 wave_sel = 3'b011; // 3/4 time
        #15000;

	//Case 5:
        clk = 0;
        rst = 1;
        freq = 8'd5;
        inj_sel = 1'b1;
	wave_amp = 5;
	noise_amp = 3;
	duty_cycle = 128;
        wave_sel = 3'b100;
        // Hold reset for a short period
        #15 rst = 0;
        // Simulation time division into 4 parts
        #15000 wave_sel = 3'b000; // 1/4 time
	#15000 wave_sel = 3'b001; // 1/4 time
        #15000 wave_sel = 3'b010; // 2/4 time
        #15000 wave_sel = 3'b011; // 3/4 time
        #15000;

	//Case 6:
        clk = 0;
        rst = 1;
        freq = 8'd5;
        inj_sel = 1'b0;
	wave_amp = 5;
	noise_amp = 3;
	duty_cycle = 0;
        wave_sel = 3'b001;
        // Hold reset for a short period
        #15 rst = 0;
        // Simulation time division into 4 parts
        #15000 duty_cycle = 56; // 1/4 time
	#15000 duty_cycle = 128; // 1/4 time
        #15000 duty_cycle = 190; // 2/4 time
        #15000 duty_cycle = 255; // 3/4 time
        #15000;
        $stop;
    end
endmodule
